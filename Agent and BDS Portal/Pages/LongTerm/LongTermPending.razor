@page "/LongTerm/Lpendinglist"

@using Agent_and_BDS_Portal.Data
@using Agent_and_BDS_Portal.Context
@using Agent_and_BDS_Portal.Model
@using System.Globalization
@inject NavigationManager Navigation
@inject CGL_Insured_Services insuredServices
@inject CGL_CreditDebit_Services creditdebitServices
@inject CGL_Coverage_Services coverageServices
<<<<<<< HEAD
=======
@inject CGL_Policy_Holder_Services policyholderServices
@inject CGL_Beneficiary_Services beneficiaryServices


<h3><strong>LONG TERM</strong></h3>
>>>>>>> testcode


<div class="container mt-0">
    <div class="border my-4 p-4 rounded" style="background-color: #ffff; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);">
        <h3 class="text-center font-weight-bold"><Strong>PENDING</Strong></h3>
        <!-- get the bank name, reflect into it --> <h5 class="text-center font-weight-bold"><strong><u>CBLIC</u></strong></h5>


        <!-- Search and Filter -->
       <div class="d-flex justify-content-between align-items-center mb-3" style="max-width: 300%;">
    <!-- Search Box -->
            <div class="d-flex justify-content-between align-items-center mb-3" style="max-width: 500%;">
                <!-- Search Box -->
                <div class="input-group" style="max-width: 800px;">
                    <span class="input-group-text bg-light" style="height: 40px;">🔍</span>
                    <input type="text" @bind="searchQuery" class="form-control"
                           style="height: 40px;" placeholder="Search..." />
                </div>
            </div>
                
                <div class="d-flex align-items-center">
                    <span class="input-group-text bg-light" style="height: 40px;">Filter By:</span>
                    <select @bind="selectedFilter" class="form-select"
                            style="max-width: 200px; height: 40px;">
                        <option value="date"></option>
                        <option value="2024">2024</option>
                        <option value="2025">2025</option>
                        <option value="2026">2026</option>
                    </select>
                </div>
            </div>


        <!-- Table -->
        <div class="mt-4 table-responsive">
            <table class="table table-bordered table-hover">
                <thead style="background-color: #77B254;">
                    <tr>
                        <th class="text-center text-white" style="cursor: pointer;" @onclick="ToggleSortOrder">
                            Release Date <i class="bi @(isDescending ? "bi-arrow-down" : "bi-arrow-up")"></i>
                        </th>
                        <th class="text-center text-white">Gross</th>
                        <th class="text-center text-white">Net</th>
                        <th class="text-center text-white">Total Coverage</th>
                        <th class="text-center text-white">Total Application</th>
                        <th class="text-center text-white">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (!pagedList.Any())
                    {
                        <tr>
                            <td colspan="6" class="text-center">No data available.</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var creditdebit in pagedList)
                        {
                            <tr>
                                <td class="hover-cell text-center">@creditdebit.Submitted_Date.ToString("MM/dd/yyyy")</td>
                                <td class="hover-cell text-center">@creditdebit.Gross_Pay.ToString("F2")</td>
                                <td class="hover-cell text-center">@creditdebit.Net_Pay.ToString("F2")</td>
                                <td class="hover-cell text-center">@creditdebit.Total_Coverage</td>
                                <td class="hover-cell text-center">@creditdebit.Total_Application</td>
                                <td class="text-center">
                                    <button class="btn btn-outline-success btn-sm" @onclick="() => ToggleDetails(creditdebit.DCHS_To)">
                                        View Application
                                    </button>
                                </td>
                            </tr>
<<<<<<< HEAD
<<<<<<< Updated upstream
                        }
                    }
                </tbody>
=======

                            @if (SelectedDCHS == creditdebit.DCHS_To)
                            {
                                var matchedInsuredList = InsuredObj
                                .Where(i => (i.DCHS == creditdebit.DCHS_To || i.DCHS == creditdebit.DCHS_From) && i.Type == "Short Term")
                                .ToList();

                                var matchedcoverageList = CoverageObj
                                .Where(c => matchedInsuredList.Select(i => i.ID_Insured).Contains(c.ID_Insured))
                                .ToList();



                                <tr>
                                    <td colspan="5">
                                        <div class="p-3 border rounded bg-light">
                                            <h5 class="text-center"><strong>Insured Individuals</strong></h5>
                                            <table class="table table-bordered">
                                                <thead class="table-success">
                                                    <tr>
                                                        <th class="text-center">Full Name</th>
                                                        <th class="text-center">Amount of Insured</th>
                                                        <th class="text-center">Term of Loan</th>
                                                        <th class="text-center">Premium</th>
                                                        <th class="text-center">Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (!matchedInsuredList.Any())
                                                    {
                                                        <tr>
                                                            <td colspan="5" class="text-center">No insured data available.</td>
                                                        </tr>
                                                    }
                                                    else
                                                    {
                                                        @foreach (var insured in matchedInsuredList)
                                                        {
                                                            var coverage = matchedcoverageList.FirstOrDefault(c => c.ID_Insured == insured.ID_Insured);
                                                            <tr>
                                                                <td class="text-center">@insured.First_Name @insured.Last_Name</td>
                                                                <td class="text-center">@coverage?.Amount_Of_Insured</td>
                                                                <td class="text-center">@coverage?.Term_Of_Loan</td>
                                                                <td class="text-center">@coverage?.Premium</td>
                                                                <td class="text-center">
                                                                    <button class="btn btn-outline-success btn-sm" @onclick="() => OpenModal(insured)">
                                                                        View
                                                                    </button>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
        @if (showModal)
        {
            <div class="modal fade show d-block" style="background: rgba(0, 0, 0, 0.5);" tabindex="-1">
                <div class="modal-dialog modal-lg modal-dialog-centered">
                    <div class="modal-content p-4" style="background-color: #fff; border-radius: 10px;">
                        <div class="modal-header bg-light border-bottom">
                            <h4 class="modal-title fw-bold">@selectedInsured.First_Name @selectedInsured.Last_Name</h4>
                            <button type="button" class="btn-close" @onclick="CloseModal"></button>
                        </div>
                        <div class="modal-body">
                            <div class="d-flex justify-content-center mb-3">
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-outline-secondary rounded-pill px-4"
                                            onclick="showTab('personalInfo')">
                                        Personal Information
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary rounded-pill px-4"
                                            onclick="showTab('otherDetails')">
                                        Other Details
                                    </button>
                                </div>
                            </div>

                            <div id="personalInfo" class="tab-content">
                                <div class="table-responsive p-3 border rounded bg-light">
                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <label class="form-label"><strong>ID Insured</strong></label>
                                            <input type="text" class="form-control" value="@selectedInsured.ID_Insured" readonly />
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label"><strong>Full Name</strong></label>
                                            <input type="text" class="form-control" value="@selectedInsured.First_Name @selectedInsured.Last_Name" readonly />
                                        </div>
                                 
                                    <div class="col-md-6">
                                        <label class="form-label"><strong>Suffix</strong></label>
                                        <input type="text" class="form-control" value="@selectedInsured.Suffix" readonly />
                                    </div>
                           

                                   @* 
                     
                                        <div class="col-md-3">
                                            <label class="form-label"><strong>Weight</strong></label>
                                            <input type="text" class="form-control" value="@selectedInsured.Weight" readonly />
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label"><strong>Address</strong></label>
                                            <input type="text" class="form-control" value="@selectedInsured.Address" readonly />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-4">
                                            <label class="form-label"><strong>Contact Number</strong></label>
                                            <input type="text" class="form-control" value="@selectedInsured.Contact_Number" readonly />
                                        </div>
                                        <div class="col-md-8">
                                            <label class="form-label"><strong>Email</strong></label>
                                            <input type="text" class="form-control" value="@selectedInsured.Email_Address" readonly />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-3">
                                            <label class="form-label"><strong>Age</strong></label>
                                            <input type="text" class="form-control" value="@selectedInsured.Age" readonly />
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-md-4">
                                                <label class="form-label"><strong>Date of Birth</strong></label>
                                                <input type="text" class="form-control" value="@selectedInsured.Date_Of_Birth" readonly />
                                            </div>
                                            <div class="col-md-8">
                                                <label class="form-label"><strong>Place of Birth</strong></label>
                                                <input type="text" class="form-control" value="@selectedInsured.Place_Of_Birth" readonly />
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-md-4">
                                                <label class="form-label"><strong>Nationality</strong></label>
                                                <input type="text" class="form-control" value="@selectedInsured.Nationality" readonly />
                                            </div>
                                            <div class="col-md-8">
                                                <label class="form-label"><strong>TIN/SSS/GSIS</strong></label>
                                                <input type="text" class="form-control" value="@selectedInsured.Place_Of_Birth" readonly />
                                            </div>
                                        </div>
                                       

                                        






 *@




                                    <!-- Add more personal info fields here -->
                                </div>
                            </div>

                            <div id="otherDetails" class="tab-content" style="display: none;">
                                <div class="table-responsive p-3 border rounded bg-light">
                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <label class="form-label"><strong>Occupation & Livelihood</strong></label>
                                            <input type="text" class="form-control" value="@selectedInsured.Occupation_And_Livelihood" readonly />
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label"><strong>Source of Funds</strong></label>
                                            <input type="text" class="form-control" value="@selectedInsured.Source_Of_Funds" readonly />
                                        </div>
                                    </div>
                                    <!-- Add more other details fields here -->
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer d-flex justify-content-between">
                            <button class="btn btn-light" @onclick="CloseModal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
                   </div>
               

            <script>
                function showTab(tabId) {
                    var personalInfoTab = document.getElementById("personalInfo");
                    var otherDetailsTab = document.getElementById("otherDetails");

                    // Hide both tabs initially
                    personalInfoTab.style.display = "none";
                    otherDetailsTab.style.display = "none";

                    // Show the selected tab
                    if (tabId === 'personalInfo') {
                        personalInfoTab.style.display = "block";
                    } else {
                        otherDetailsTab.style.display = "block";
                    }
                }

                // Initialize the default tab
                window.onload = function() {
                    showTab('personalInfo'); // Default to Personal Info tab
                }
            </script>
        }



>>>>>>> Stashed changes

=======


                            @if (SelectedDCHS == creditdebit.DCHS_To)
                            {
                                // Fetch matched insured individuals based on DCHS_To or DCHS_From
                                var matchedInsuredList = InsuredObj
                                .Where(i => (i.DCHS == creditdebit.DCHS_To || i.DCHS == creditdebit.DCHS_From) && i.Type == "Long Term")
                                .ToList();

                                // Fetch matched coverage based on insured individuals
                                var matchedCoverageList = CoverageObj
                                .Where(c => matchedInsuredList.Any(i => i.ID_Insured == c.ID_Insured))
                                .ToList();

                                // Fetch matched policy holders based on insured individuals
                                var matchedPolicyHolderList = PolicyHolderObj
                                .Where(p => matchedInsuredList.Any(i => i.ID_Policy_Holder == p.ID_Policy_Holder))
                                .ToList();
                                var matchedCreditDebitList = CreditdebitObj
                                .Where(p => matchedInsuredList.Any(i => i.ID_Policy_Holder == p.ID_Policy_Holder))
                                .ToList();



                                <tr>
                                    <td colspan="6">
                                        <div class="p-3 border rounded bg-light">
                                            <h5 class="text-center"><strong>Insured Individuals</strong></h5>
                                            <table class="table table-bordered">
                                                <thead class="table-success">
                                                    <tr>
                                                      
                                                        <th class="text-center">Full Name</th>
                                                        <th class="text-center">Amount of Insured</th>
                                                        <th class="text-center">Term of Loan</th>
                                                        <th class="text-center">Premium</th>
                                                        <th class="text-center">Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (!matchedInsuredList.Any())
                                                    {
                                                        <tr>
                                                            <td colspan="6" class="text-center">No insured data available.</td>
                                                        </tr>
                                                    }
                                                    else
                                                    {
                                                        @foreach (var insured in matchedInsuredList)
                                                        {
                                                            var coverage = matchedCoverageList.FirstOrDefault(c => c.ID_Insured == insured.ID_Insured);
                                                            var policyholder = matchedPolicyHolderList.FirstOrDefault(p => p.ID_Policy_Holder == insured.ID_Policy_Holder);

                                                            <tr>
                                                               
                                                                <td class="text-center">@insured.First_Name @insured.Last_Name</td>
                                                                <td class="text-center">@coverage?.Amount_Of_Insured.ToString("F2")</td>
                                                                <td class="text-center">@coverage?.Term_Of_Loan</td>
                                                                <td class="text-center">@coverage?.Premium.ToString("F2")</td>
                                                                <td class="text-center">
                                                                    <button class="btn btn-outline-success btn-sm" @onclick="() => OpenModal(insured, coverage)">
                                                                        View
                                                                    </button>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    }
                </tbody>
>>>>>>> testcode
            </table>
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-between align-items-center my-3">
            <button class="btn btn-outline-success px-4" @onclick="PreviousPage" disabled="@(currentPage == 1)">Previous</button>
            <strong>Page @currentPage of @totalPages</strong>
            <button class="btn btn-outline-success px-4" @onclick="NextPage" disabled="@(currentPage == totalPages)">Next</button>
        </div>
    </div>
</div>

@if (showModal)
{
	<div class="modal d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog modal-xl">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title"><b>Borrower's Details: </b></h5>
					<button type="button" class="btn-close" @onclick="CloseModal"></button>
				</div>
				<div class="modal-body">
					<ul class="nav nav-tabs" id="myTab" role="tablist">
						<li class="nav-item" role="presentation">
							<a class="nav-link active" id="coverage-tab" data-bs-toggle="tab" href="#coverage" role="tab" aria-controls="coverage" aria-selected="true">Coverage Details</a>
						</li>
						<li class="nav-item" role="presentation">
							<a class="nav-link" id="other-details-tab" data-bs-toggle="tab" href="#other-details" role="tab" aria-controls="other-details" aria-selected="false">Other Details</a>
						</li>
					</ul>
					@* TAB 1 FOR COVERAGE DETAILS *@
					<div class="tab-content" id="myTabContent">
						<div class="tab-pane fade show active" id="coverage" role="tabpanel" aria-labelledby="coverage-tab">
							<form>
								<div class="border rounded p-3 mb-3">
									<div class="border rounded p-3 mb-3">
										<div class="col-md mb-3">
											<label for="bankName" class="form-label">Name of Bank</label>
											<input type="text" class="form-control" id="bankName" readonly />
										</div>
										<div class="row">
											<div class="col-md-3 mb-3">
												<label for="bankBranch" class="form-label">Branch</label>
												<input type="text" class="form-control" id="bankBranch" readonly />
											</div>
											<div class="col-md-9 mb-3">
												<label for="bankAddress" class="form-label">Address</label>
												<input type="text" class="form-control" id="bankAddress" readonly />
											</div>
											<div class="col-md-4 mb-3">
												<label for="dbcr" class="form-label">DB/CR</label>
												<input type="number" class="form-control" id="dbcr" readonly />
											</div>
											<div class="col-md-4 mb-3">
												<label for="ORDate" class="form-label">OR Date</label>
												<input type="date" class="form-control" id="ORDate" readonly />
											</div>
											<div class="col-md-4 mb-3">
												<label for="ORNumber" class="form-label">OR Number</label>
												<input type="number" class="form-control" id="ORNumber" readonly />
											</div>
										</div>
									</div>

									<div class="border rounded p-3 mb-3">
										<div class="row">
											<div class="col-md-4 mb-3">
												<label for="dob" class="form-label">Date of Birth</label>
												<input type="date" class="form-control" id="dob" @bind="selectedInsured.Date_Of_Birth" readonly />
											</div>
											<div class="col-md-1 mb-3">
												<label for="age" class="form-label">Age</label>
												<input type="number" class="form-control" id="age" @bind="selectedInsured.Age" readonly />
											</div>
											<div class="row">
												<div class="col-md-4 mb-3">
													<label for="lastName" class="form-label">Last Name</label>
													<input type="text" class="form-control" id="lastName" @bind="selectedInsured.Last_Name" readonly />
												</div>
												<div class="col-md-4 mb-3">
													<label for="firstName" class="form-label">First Name</label>
													<input type="text" class="form-control" id="firstName" @bind="selectedInsured.First_Name" readonly />
												</div>
												<div class="col-md-3 mb-3">
													<label for="middleName" class="form-label">Middle Name</label>
													<input type="text" class="form-control" id="middleName" @bind="selectedInsured.Middle_Name" readonly />
												</div>
												<div class="col-sm-1 mb-3">
													<label for="suffix" class="form-label">Suffix</label>
													<input type="text" class="form-control" id="suffix" @bind="selectedInsured.Suffix" readonly />
												</div>
											</div>
										</div>
									</div>

									<div class="border rounded p-3 mb-3">
										<div class="row">
											<div class="col-md-4 mb-3">
												<label for="loan" class="form-label">Amount of Loan</label>
												<input type="text" class="form-control" id="loan" value="@selectedCoverage?.Amount_Of_Insured" readonly />
											</div>
											<div class="col-md-4 mb-3">
												<label for="term" class="form-label">Loan Term</label>
												<input type="text" class="form-control" id="term" @bind="selectedCoverage.Term_Of_Loan" readonly />
											</div>
											<div class="col-md-4 mb-3">
												<label for="effective" class="form-label">Effectivity Date</label>
												<input type="date" class="form-control" id="effective" @bind="selectedCoverage.Effective_Date" readonly />
											</div>
											<div class="col-md-4 mb-3">
												<label for="dueDate" class="form-label">Due Date</label>
												<input type="date" class="form-control" id="dueDate" readonly />
											</div>
											<div class="col-md-4 mb-3">
												<label for="termination" class="form-label">Termination Date</label>
												<input type="date" class="form-control" id="termination" @bind="selectedCoverage.Termination_Date" readonly />
											</div>
											<div class="col-md-4 mb-3">
												<label for="mop" class="form-label">Mode of Payment</label>
												<input type="text" class="form-control" id="mop" @bind="selectedCoverage.Mode_Of_Payment" readonly />
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-4 mb-3">
											<div class="border rounded p-3 mb-3">

												<div class="col-md mb-3">
													<label for="DCHS" class="form-label">DCHS Number</label>
													<input type="text" class="form-control" id="DCHS" value="@selectedInsured?.DCHS" readonly />
												</div>
												<div class="col-md mb-3">
													<label for="prem" class="form-label">Premium</label>
													<input type="number" class="form-control" id="prem" @bind="selectedCoverage.Premium" readonly />
												</div>

												<div class="col-md mb-3">
													<label for="Class" class="form-label">Rider</label>
													<input type="text" class="form-control" id="Class" value="@selectedCoverage.Rider" readonly />
												</div>
											</div>
										</div>
										<div class="col-md mb-3">
											<div class="border rounded p-3 mb-3">
												<div class="col-md mb-3">
													<div class="row">
														<div class="col-md mb-3">
															<label for="status" class="form-label">Underwriting Status</label>
															<input type="text" />
														</div>
														<div class="col-md mb-3">
															<label for="psdstatus" class="form-label">PSD Status</label>
                                                            <input type="text" />
														</div>
													</div>
												</div>
												<div class="col-md mb-3">
													<div class="col-md mb-3">
														<label for="remarks" class="form-label">Remarks</label>
														<textarea class="form-control" rows="4" cols="50" style="resize:none;" id="remarks"></textarea>
													</div>
												</div>
											</div>
										</div>
									</div>
									<div class="border rounded p-3 mb-3">
										<div class="table-responsive">
											<table class="table table-bordered mb-0">
												<thead class="text-white" style="background-color:#5d835c">
													<tr>
														<th class="text-center">Illness</th>
														<th class="text-center">Regular Age</th>
														<th class="text-center">Overage</th>
													</tr>
												</thead>
												<tbody>
												</tbody>
											</table>
										</div>
									</div>

									<table class="table table-borderless mb-0">
										<thead class="text-white" style="background-color:#5d835c">
											<tr>
												<th class="text-center" style="width: 85px;">No.</th>
												<th class="text-center" style="width:auto;">Question</th>
												<th class="text-center" style="width: 150px;">Answer</th>
											</tr>
										</thead>
										<tbody>
											
										</tbody>
									</table>
								</div>
							</form>
						</div>

						@* TAB 2 FOR OTHER DETAILS (PERSONAL) *@
						<div class="tab-pane fade" id="other-details" role="tabpanel" aria-labelledby="other-details-tab">
							<form>
								<div class="border rounded p-3 mb-3">
									<div class="border rounded p-3 mb-3">
										<div class="row">
											<div class="col-md-8">
												<label for="address" class="form-label">Address</label>
												<input type="text" class="form-control" id="address" value="@selectedInsured?.Address" readonly />
											</div>
											<div class="col-md-2 mb-2">
												<label for="civil" class="form-label">Civil Status</label>
												<input type="text" class="form-control" id="civil" value="@selectedInsured?.Civil_Status" readonly />
											</div>
											<div class="col-md-2 mb-2">
												<label for="gender" class="form-label">Gender</label>
												<input type="text" class="form-control" id="gender" value="@selectedInsured?.Gender" readonly />
											</div>
											<div class="col-sm-1 mb-2">
												<label for="height" class="form-label">Height</label>
												<input type="text" class="form-control" id="height" value="@selectedInsured?.Height" readonly />
											</div>
											<div class="col-sm-1 mb-2">
												<label for="weight" class="form-label">Weight</label>
												<input type="text" class="form-control" id="weight" value="@selectedInsured?.Weight" readonly />
											</div>

											<div class="col-md-3 mb-3">
												<label for="contact" class="form-label">Contact Number</label>
												<input type="number" class="form-control" id="contact" value="@selectedInsured?.Contact_Number" readonly />
											</div>
											<div class="col-md-7 mb-3">
												<label for="email" class="form-label">Email Address</label>
												<input type="text" class="form-control" id="email" value="@selectedInsured?.Email_Address" readonly />
											</div>
											<div class="col-md-4 mb-3">
												<label for="pob" class="form-label">Place of Birth</label>
												<input type="text" class="form-control" id="pob" value="@selectedInsured?.Place_Of_Birth" readonly />
											</div>
											<div class="col-md-3 mb-3">
												<label for="nationality" class="form-label">Nationality</label>
												<input type="text" class="form-control" id="nationality" value="@selectedInsured?.Nationality" readonly />
											</div>
											<div class="col-md-5 mb-3">
												<label for="govno" class="form-label">Gov Number (TIN/SSS/GSIS)</label>
												<input type="number" class="form-control" id="govno" value="@selectedInsured?.TIN_SSS_GSIS_NO" readonly />
											</div>
										</div>
									</div>
									<div class="border rounded p-3 mb-3">
										<div class="row">
											<div class="col-md-6 mb-3">
												<label for="source" class="form-label">Source of Funds</label>
												<input type="text" class="form-control" id="source" value="@selectedInsured?.Source_Of_Funds" readonly />
											</div>
											<div class="col-md-6 mb-3">
												<label for="nature" class="form-label">Nature of Self-Employment</label>
												<input type="text" class="form-control" id="nature" value="@selectedInsured?.Nature_of_Self_Employment_Business" readonly />
											</div>
											<div class="col-md-8 mb-3">
												<label for="business" class="form-label">Address of Employer</label>
												<input type="text" class="form-control" id="business" value="@selectedInsured?.Address_Of_Business_or_Employer" readonly />
											</div>
											<div class="col-md-4 mb-3">
												<label for="occupation" class="form-label">Occupation</label>
												<input type="text" class="form-control" id="occupation" value="@selectedInsured?.Occupation_And_Livelihood" readonly />
											</div>
										</div>
									</div>

									<div class="border rounded p-3 mb-3">
										<div class="table-responsive" style="overflow-x: auto">
											<table class="table table-bordered mb-0">
												<thead class="text-white" style="background-color:#5d835c">
													<tr>
														<th class="text-center">Full Name</th>
														<th class="text-center">Age</th>
														<th class="text-center">Relation to Insured</th>
													</tr>
												</thead>
												<tbody>
												
												</tbody>
											</table>
										</div>
									</div>
								</div>

							</form>
						</div>
					</div>
				</div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary">Save Changes</button>
                    <button type="button" class="btn btn-outline-secondary">Close</button>
                </div>
            </div>
        </div>
    </div>


   @*  <style>
        .btn-group {
        position: relative;
        background: #f8f9fa;
        padding: 5px;
        border-radius: 30px;
        display: inline-flex;
        overflow: hidden;
        }

        .slider {
        position: absolute;
        width: 50%;
        height: 100%;
        background-color: rgba(40, 167, 69, 0.8);
        border-radius: 30px;
        transition: transform 0.3s ease-in-out;
        }

        .btn {
        position: relative;
        font-weight: bold;
        color: black;
        border: none;
        transition: color 0.3s ease-in-out;
        z-index: 1;
        }

        .active-tab {
        color: green !important;
        }

        .inactive-tab {
        color: black;
        }

        .btn-group .btn:nth-child(2).active-tab ~ .slider {
        transform: translateX(100%);
        }
    </style>
 *@

   @*  <script>
        function showTab(tabId, button) {
        var personalInfoTab = document.getElementById("personalInfo");
        var otherDetailsTab = document.getElementById("otherDetails");
        var buttons = document.querySelectorAll(".btn-group .btn");
        var slider = document.querySelector(".slider");

        // Hide both tabs initially
        personalInfoTab.style.display = "none";
        otherDetailsTab.style.display = "none";

        // Show the selected tab
        if (tabId === 'personalInfo') {
        personalInfoTab.style.display = "block";
        slider.style.transform = "translateX(0)";
        } else {
        otherDetailsTab.style.display = "block";
        slider.style.transform = "translateX(100%)";
        }

        // Toggle active class
        buttons.forEach(btn => btn.classList.remove("active-tab"));
        button.classList.add("active-tab");
        }

        // Initialize the default tab
        window.onload = function() {
        showTab('personalInfo', document.querySelector(".btn-group .btn"));
        }
    </script>
 *@

}

@code {
<<<<<<< HEAD
<<<<<<< Updated upstream
    private string searchQuery = string.Empty;
=======



    private bool showModal = false;
    private CGL_Insured? selectedInsured = null;

    private void OpenModal(CGL_Insured insured)
    {
        selectedInsured = insured;
        showModal = true;
    }

    private void CloseModal()
    {
        selectedInsured = null;
        showModal = false;
    }


    private string selectedFilter = "date";
    private string searchQuery = string.Empty;
    private List<CGL_CreditDebit> CreditdebitObj { get; set; } = new List<CGL_CreditDebit>();
    private List<CGL_Insured> InsuredObj { get; set; } = new List<CGL_Insured>();
    private List<CGL_Coverage> CoverageObj { get; set; } = new List<CGL_Coverage>();

    private int page = 5; // Number of items per page
    private int currentPage = 1;
    private int totalPages => (int)Math.Ceiling((double)filteredList.Count / page);
    private bool isDescending = true;

>>>>>>> Stashed changes
    private List<CGL_CreditDebit> filteredList
        => (CreditdebitObj?.Where(p => string.IsNullOrEmpty(searchQuery) ||
            (DateTime.TryParseExact(searchQuery, new[] { "MM/dd/yyyy", "yyyy-MM-dd" },
                CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime searchDate)
                && p.Submitted_Date.Date == searchDate.Date) ||
            (searchQuery.All(char.IsDigit) && int.TryParse(searchQuery, out int totalApplication) && p.Total_Application == totalApplication))
        .ToList()) ?? new List<CGL_CreditDebit>();
=======
    private bool showModal = false;
    private CGL_Insured selectedInsured = null;
    private CGL_Coverage selectedCoverage = null;
    private CGL_Policy_Holder selectedPolicyHolder = null;
    private CGL_Beneficiary selectedBeneficiary = null;
>>>>>>> testcode

    private void OpenModal(CGL_Insured insured, CGL_Coverage coverage)
    {
        selectedInsured = insured;
        selectedCoverage = coverage;
        showModal = true;
    }


    private void CloseModal()
    {
        // selectedInsured = null;
        // selectedCoverage = null;
        showModal = false;
    }

    private string selectedFilter = "date";
    private string searchQuery = string.Empty;
    private List<CGL_CreditDebit> CreditdebitObj { get; set; } = new List<CGL_CreditDebit>();
    private List<CGL_Insured> InsuredObj { get; set; } = new List<CGL_Insured>();
    private List<CGL_Coverage> CoverageObj { get; set; } = new List<CGL_Coverage>();
    private List<CGL_Policy_Holder> PolicyHolderObj { get; set; } = new List<CGL_Policy_Holder>();
    private List<CGL_Beneficiary> BeneficiaryObj { get; set; } = new List<CGL_Beneficiary>();


    private int page = 5; // Number of items per page
    private int currentPage = 1;
    private int totalPages => (int)Math.Ceiling((double)filteredList.Count / page);
    private bool isDescending = true;

    private List<CGL_CreditDebit> filteredList
    => (CreditdebitObj?
    .Where(p => string.IsNullOrEmpty(searchQuery) ||
    (DateTime.TryParseExact(searchQuery, new[] { "MM/dd/yyyy", "yyyy/dd/MM" },
    CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime searchDate)
    && p.Submitted_Date.Date == searchDate.Date) ||
    (searchQuery.All(char.IsDigit) && int.TryParse(searchQuery, out int totalApplication) && p.Total_Application == totalApplication))
    .OrderBy(p => isDescending ? -p.Submitted_Date.Ticks : p.Submitted_Date.Ticks)
    .ToList()) ?? new List<CGL_CreditDebit>();

    private List<CGL_CreditDebit> pagedList => filteredList.Skip((currentPage - 1) * page).Take(page).ToList();

    private string? SelectedDCHS = null;

    protected override async Task OnInitializedAsync()
    {
<<<<<<< HEAD
<<<<<<< Updated upstream
        var result = await creditdebitServices.GetAllCGL_CreditDebitAsync();
        CreditdebitObj = result ?? new List<CGL_CreditDebit>();
=======
        var creditDebitList = await creditdebitServices.GetAllCGL_CreditDebitAsync() ?? new List<CGL_CreditDebit>();
        var insuredList = await insuredServices.GetAllCGL_INSUREDAsync() ?? new List<CGL_Insured>();
        var coverageList = await coverageServices.GetAllCGL_CoverageAsync() ?? new List<CGL_Coverage>();


        InsuredObj = insuredList.Where(x => x.Type?.Equals("Long Term", StringComparison.OrdinalIgnoreCase) == true).ToList();

       
        CreditdebitObj = (from cd in creditDebitList
                          join ins in insuredList on cd.DCHS_To equals ins.DCHS
                          where ins.Type == "Long Term"
                          select new CGL_CreditDebit
                              {
                                  Submitted_Date = cd.Submitted_Date,
                                  Gross_Pay = cd.Gross_Pay,
                                  Net_Pay = cd.Net_Pay,
                                  Total_Application = cd.Total_Application,
                                  DCHS_To = cd.DCHS_To
                              }).ToList();
>>>>>>> Stashed changes
=======
        try
        {
            var creditDebitList = await creditdebitServices.GetAllCGL_CreditDebitAsync() ?? new List<CGL_CreditDebit>();
            var insuredList = await insuredServices.GetAllINSUREDAsync() ?? new List<CGL_Insured>();
            var coverageList = await coverageServices.GetAllCGL_CoverageAsync() ?? new List<CGL_Coverage>();
            var policyholderList = await policyholderServices.GetAllPolicyHolderAsync() ?? new List<CGL_Policy_Holder>();
            var beneficiaryList = await beneficiaryServices.GetAllBeneficiaryAsync() ?? new List<CGL_Beneficiary>();
            // var filteredBeneficiaries = beneficiaryList
            // .Where(b => b.ID_Insured == selectedInsured?.ID_Insured)
            // .ToList();

           
            // Initialize InsuredObj
            InsuredObj = insuredList.Where(x => x.Type?.Equals("Long Term", StringComparison.OrdinalIgnoreCase) == true).ToList();

            // Populate CoverageObj
            CoverageObj = coverageList
            .Where(c => InsuredObj.Any(i => i.ID_Insured == c.ID_Insured))
            .ToList();

             BeneficiaryObj = beneficiaryList
            .Where(c => BeneficiaryObj.Any(i => i.ID_Insured == c.ID_Insured))
            .ToList();

            // Populate PolicyHolderObj
            PolicyHolderObj = policyholderList
            .Where(p => InsuredObj.Any(i => i.ID_Policy_Holder == p.ID_Policy_Holder))
            .ToList();
            CreditdebitObj = creditDebitList
            .Where(p => creditDebitList.Any(i => i.Total_Application == p.Total_Application))
            .ToList();
           
           
            CreditdebitObj = (from cd in creditDebitList
                              join ins in InsuredObj on cd.DCHS_To equals ins.DCHS
                              join Beneficiary in InsuredObj on cd.DCHS_To equals Beneficiary.DCHS
                              where ins.Type == "Long Term"
                              select new CGL_CreditDebit
                                  {
                                      Submitted_Date = cd.Submitted_Date,
                                      Gross_Pay = cd.Gross_Pay,
                                      Net_Pay = cd.Net_Pay,
                                      Total_Application = cd.Total_Application,
                                      DCHS_From = cd.DCHS_From,
                                      DCHS_To = cd.DCHS_To,
                                      Total_Coverage = CoverageObj
                                  .Where(c => c.ID_Insured == ins.ID_Insured)
                                  .Sum(c => c.Amount_Of_Insured)
                                  }).ToList();

            // Debugging statements
            Console.WriteLine($"Insured Count: {InsuredObj.Count}");
            Console.WriteLine($"Coverage Count: {CoverageObj.Count}");
            Console.WriteLine($"Policy Holder Count: {PolicyHolderObj.Count}");
            Console.WriteLine($"Credit Debit Count: {CreditdebitObj.Count}");

        }
        catch (Exception ex)
        {
            // Log the error
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
>>>>>>> testcode
    }

    private void ToggleDetails(string dchsNumber) => SelectedDCHS = (SelectedDCHS == dchsNumber) ? null : dchsNumber;

<<<<<<< HEAD
<<<<<<< Updated upstream
    // Method to open the details modal
    private void OpenDetailsModal(CGL_CreditDebit detail)
    {
        SelectedDetail = detail;
        IsModalOpen = true;
    }

    // Method to close the details modal
    private void CloseDetailsModal()
    {
        IsModalOpen = false;
    }
}
=======
    private void ToggleSortOrder() => isDescending = !isDescending;
    private void NextPage() { if (currentPage < totalPages) currentPage++; }
    private void PreviousPage() { if (currentPage > 1) currentPage--; }
} 
>>>>>>> Stashed changes
=======
    private void ToggleSortOrder() => isDescending = !isDescending;
    private void NextPage() { if (currentPage < totalPages) currentPage++; }
    private void PreviousPage() { if (currentPage > 1) currentPage--; }
    }
>>>>>>> testcode
