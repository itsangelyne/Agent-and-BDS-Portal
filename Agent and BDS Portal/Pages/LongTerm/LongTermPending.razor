@page "/LongTerm/Lpendinglist"
@using Agent_and_BDS_Portal.Data
@using Agent_and_BDS_Portal.Model
@using System.Globalization
@inject CGL_Insured_Services insuredServices
@inject CGL_CreditDebit_Services creditdebitServices

<h3><strong>Pending</strong></h3>

<div class="container mt-0">
    <div class="border my-4 p-4 rounded" style="background-color: #ffff; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);">
        <h3 class="text-center font-weight-bold"><strong>LONG TERM</strong></h3>

        <!-- Search Bar -->
        <div class="input-group mb-3 shadow-sm">
            <span class="input-group-text bg-light">🔍</span>
            <input type="text" @bind="searchQuery" class="form-control" placeholder="Search..." />
        </div>

        <!-- Table -->
        <div class="mt-4 table-responsive">
            <table class="table table-bordered table-hover">
                <thead style="background-color: #77B254;">
                    <tr>
                        <th class="text-center text-white">Release Date</th>
                        <th class="text-center text-white">Gross</th>
                        <th class="text-center text-white">Net</th>
                        <th class="text-center text-white">Total Application</th>
                        <th class="text-center text-white">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (!pagedList.Any())
                    {
                        <tr>
                            <td colspan="5" class="text-center">No data available.</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var creditdebit in pagedList)
                        {
                            <tr>
                                <td class="hover-cell text-center">@creditdebit.Submitted_Date.ToString("MM/dd/yyyy")</td>
                                <td class="hover-cell text-center">@creditdebit.Gross_Pay</td>
                                <td class="hover-cell text-center">@creditdebit.Net_Pay</td>
                                <td class="hover-cell text-center">@creditdebit.Total_Application</td>
                                <td class="text-center">
                                    <button class="btn btn-outline-success btn-sm" @onclick="() => ToggleDetails(creditdebit.DCHS_To)">
                                        View Application
                                    </button>
                                </td>
                            </tr>

                            <!-- Display names based on matching DCHS -->
                            @if (SelectedDCHS == creditdebit.DCHS_To)
                            {
                                var matchedInsuredList = InsuredObj
                                .Where(i => i.DCHS == creditdebit.DCHS_To || i.DCHS == creditdebit.DCHS_From)
                                .ToList();

                                <tr>
                                    <td colspan="5">
                                        <div class="p-3 border rounded bg-light">
                                            <h5 class="text-center"><strong>Insured Individuals</strong></h5>
                                            <table class="table table-bordered">
                                                <thead class="table-success">
                                                    <tr>
                                                        <th class="text-center">DCHS</th>
                                                        <th class="text-center">Full Name</th>
                                                   
                                                        <th class="text-center">Age</th>
                                                        <th class="text-center">Gender</th>
                                                        <th class="text-center">Contact Number</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (!matchedInsuredList.Any())
                                                    {
                                                        <tr>
                                                            <td class="text-center">No insured data available.</td>
                                                        </tr>
                                                    }
                                                    else
                                                    {
                                                        @foreach (var insured in matchedInsuredList)
                                                        {
                                                            <tr>
                                                                <td class="text-center">@insured.DCHS</td>
                                                                <td class="text-center">@insured.First_Name @insured.Last_Name</td>
                                                                <td class="text-center">@insured.Age</td>
                                                                <td class="text-center">@insured.Gender</td>
                                                                <td class="text-center">@insured.Contact_Number</td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>

            <!-- Pagination -->
            <div class="d-flex justify-content-between align-items-center my-3">
                <button class="btn btn-outline-success px-4" @onclick="PreviousPage" disabled="@(currentPage == 1)">
                    <span class="oi oi-arrow-left" aria-hidden="true"></span> Previous
                </button>

                <strong>Page @currentPage of @totalPages</strong>

                <button class="btn btn-outline-success px-4" @onclick="NextPage" disabled="@(currentPage == totalPages)">
                    Next <span class="oi oi-arrow-right" aria-hidden="true"></span>
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    private string searchQuery = string.Empty;
    private List<CGL_CreditDebit> CreditdebitObj { get; set; } = new List<CGL_CreditDebit>();
    private List<CGL_Insured> InsuredObj { get; set; } = new List<CGL_Insured>();

    private int page = 5; // Number of items per page
    private int currentPage = 1;
    private int totalPages => (int)Math.Ceiling((double)filteredList.Count / page);

    private List<CGL_CreditDebit> filteredList
        => (CreditdebitObj?.Where(p => string.IsNullOrEmpty(searchQuery) ||
            (DateTime.TryParseExact(searchQuery, new[] { "MM/dd/yyyy", "yyyy-MM-dd" },
                CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime searchDate)
                && p.Submitted_Date.Date == searchDate.Date) ||
            (searchQuery.All(char.IsDigit) && int.TryParse(searchQuery, out int totalApplication) && p.Total_Application == totalApplication))
        .ToList()) ?? new List<CGL_CreditDebit>();

    private List<CGL_CreditDebit> pagedList
        => filteredList.Skip((currentPage - 1) * page).Take(page).ToList();

    private string? SelectedDCHS = null;

    protected override async Task OnInitializedAsync()
    {
        // Fetch creditdebit and insured data
        var creditDebitResult = await creditdebitServices.GetAllCGL_CreditDebitAsync();
        var insuredResult = await insuredServices.GetAllCGL_INSUREDAsync();

        // Store in lists
        CreditdebitObj = creditDebitResult ?? new List<CGL_CreditDebit>();
        InsuredObj = insuredResult ?? new List<CGL_Insured>();
    }

    private void ToggleDetails(string dchsNumber)
    {
        SelectedDCHS = (SelectedDCHS == dchsNumber) ? null : dchsNumber;
    }

    private void NextPage()
    {
        if (currentPage < totalPages)
        {
            currentPage++;
        }
    }

    private void PreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
        }
    }
}
