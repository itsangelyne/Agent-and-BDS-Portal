@page "/LongTerm/Lpendinglist"
@using Agent_and_BDS_Portal.Data
@using Agent_and_BDS_Portal.Model
@using System.Globalization
@inject CGL_CreditDebit_Services creditdebitServices

<h3><strong>Pending</strong></h3>

<div class="container mt-0">
    <!-- Unified Border -->
    <div class="border my-4 p-4 rounded" style="background-color: #ffff; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);">

        <h3 class="text-center font-weight-bold"><strong>LONG TERM</strong></h3>

        <!-- Search Bar -->
        <div class="input-group mb-3 shadow-sm">
            <span class="input-group-text bg-light">🔍</span>
            <input type="text" @bind="searchQuery" class="form-control" placeholder="Search..." />
        </div>
        <!-- Table -->
        <div class="mt-4 table-responsive">
            <table class="table table-bordered table-hover">
                <thead style="background-color: #77B254;">
                    <tr>
                        <th class="text-center" style="color:white;">Release Date</th>
                        <th class="text-center" style="color:white;">Total Application</th>
                        <th class="text-center" style="color:white;">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (filteredList == null || !filteredList.Any())
                    {
                        <tr>
                            <td colspan="3" class="text-center">No data available.</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var creditdebit in filteredList)
                        {
                            <tr>
                                <td class="hover-cell text-center">@creditdebit.Submitted_Date.ToString("MM/dd/yyyy")</td>
                                <td class="hover-cell text-center">@creditdebit.Total_Application</td>
                                <td class="text-center">
                                    <div class="d-flex justify-content-center">
                                        <button class="btn btn-outline-success btn-sm" @onclick="() => OpenDetailsModal(creditdebit)">View Details</button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>

            </table>
        </div>
    </div>
</div>

@if (IsModalOpen)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content shadow-lg rounded-4">
                <!-- Modal Header -->
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title">
                        <i class="bi bi-info-circle-fill me-2"></i> Application Details
                    </h5>
                    <button type="button" class="btn-close text-white d-flex justify-content-center" @onclick="CloseDetailsModal"></button>
                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                    <form>
                        <div class="row mb-3">
                            <div class="col-sm-6">
                                <label for="id" class="form-label fw-bold">ID Insured:</label>
                                <input type="text" class="form-control" id="id" @bind="@SelectedDetail.DCHS_From" />
                            </div>
                            <div class="col-sm-6">
                                <label for="policyHolder" class="form-label fw-bold">DCHS:</label>
                                <input type="text" class="form-control" id="policyHolder" @bind="@SelectedDetail.DCHS_To" />
                            </div>
                        </div>
                    </form>
                </div>

                <!-- Modal Footer -->
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CloseDetailsModal">Close</button>
                    <button class="btn btn-primary">Done</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private string searchQuery = string.Empty;
    private List<CGL_CreditDebit> filteredList
        => (CreditdebitObj?.Where(p => string.IsNullOrEmpty(searchQuery) ||
            (DateTime.TryParseExact(searchQuery, new[] { "MM/dd/yyyy", "yyyy-MM-dd" },
                CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime searchDate)
                && p.Submitted_Date.Date == searchDate.Date) ||
            (searchQuery.All(char.IsDigit) && int.TryParse(searchQuery, out int totalApplication) && p.Total_Application == totalApplication))
        .ToList()) ?? new List<CGL_CreditDebit>();

    // List of Credit/Debit items
    private List<CGL_CreditDebit> CreditdebitObj { get; set; } = new List<CGL_CreditDebit>();

    protected override async Task OnInitializedAsync()
    {
        var result = await creditdebitServices.GetAllCGL_CreditDebitAsync();
        CreditdebitObj = result ?? new List<CGL_CreditDebit>();
    }

    private bool IsModalOpen = false;
    private CGL_CreditDebit SelectedDetail = new CGL_CreditDebit();

    // Method to open the details modal
    private void OpenDetailsModal(CGL_CreditDebit detail)
    {
        SelectedDetail = detail;
        IsModalOpen = true;
    }

    // Method to close the details modal
    private void CloseDetailsModal()
    {
        IsModalOpen = false;
    }
}
