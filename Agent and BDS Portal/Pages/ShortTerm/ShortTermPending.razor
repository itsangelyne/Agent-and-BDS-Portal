@page "/ShortTerm/Spendinglist"
@using Agent_and_BDS_Portal.Data
@using Agent_and_BDS_Portal.Model
@inject CGL_Insured_Services insuredServices

<div class="container mt-4">
    <h3 class="text-center text-primary fw-bold">Short-Term Insured List</h3>

    <!-- Search Bar -->
    <div class="mb-3">
        <input type="text" @bind="searchQuery" class="form-control shadow-sm" placeholder="🔍 Search by name..." />
    </div>

    <!-- Responsive Table -->
    <div class="table-responsive">
        <table class="table table-hover shadow-sm">
            <thead class="bg-primary text-white sticky-top">
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (!FilteredList.Any())
                {
                    <tr>
                        <td colspan="3" class="text-center text-muted">No records found.</td>
                    </tr>
                }
                else
                {
                    @foreach (var insured in FilteredList)
                    {
                        <tr>
                            <td>@insured.ID_Insured</td>
                            <td>@insured.First_Name @insured.Last_Name</td>
                            <td>
                                <button class="btn btn-outline-primary btn-sm"
                                        @onclick="() => ToggleDetails(insured.ID_Insured)">
                                    @(expandedRows.Contains(insured.ID_Insured) ? "Hide Details ▲" : "View Details ▼")
                                </button>
                            </td>
                        </tr>

                        @if (expandedRows.Contains(insured.ID_Insured))
                        {
                            <tr>
                                <td colspan="3">
                                    <div class="p-3 border rounded bg-light">
                                        <p><strong>Age:</strong> @insured.Age</p>
                                        <p><strong>Gender:</strong> @insured.Gender</p>
                                        <p><strong>Term Type:</strong> @insured.Type</p>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private string searchQuery = string.Empty;
    private List<CGL_Insured> InsuredObj { get; set; } = new();
    private HashSet<int> expandedRows = new();

    private List<CGL_Insured> FilteredList => InsuredObj
        .Where(p => string.IsNullOrEmpty(searchQuery) ||
                    p.First_Name.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) ||
                    p.Last_Name.Contains(searchQuery, StringComparison.OrdinalIgnoreCase))
        .ToList();

    private void ToggleDetails(int id)
    {
        if (!expandedRows.Add(id))
        {
            expandedRows.Remove(id);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var result = await insuredServices.GetAllCGL_INSUREDAsync();
        InsuredObj = result?.Where(x => x.Type?.Equals("Short Term", StringComparison.OrdinalIgnoreCase) == true).ToList() ?? new();
    }
}
