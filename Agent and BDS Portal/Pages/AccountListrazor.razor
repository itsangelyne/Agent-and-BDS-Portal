@page "/accountList"
@using Agent_and_BDS_Portal.Data
@using Agent_and_BDS_Portal.Model
@inject Account_Services accountServices

<div class="container mt-4">

	<!-- Add New User Button -->
	<div class="row mb-3">
		<div class="col-12 d-flex justify-content-end">
			<NavLink class="btn btn-primary" href="AddNewAccount">
				<span class="oi oi-plus" aria-hidden="true"></span>Add New User
			</NavLink>
		</div>
	</div>


	<div class="container mt-0">
		<!-- Unified Border -->
		<div class="border p-4" style="background-color: #eaf5e5;">
			<img src="images/ck_logo.png" alt="CK Logo" class="img-fluid" style="max-height: 50px; display: block; margin-left: auto; margin-right: auto;" />
			<br />
			<input class="form-control" id="myInput" type="text" placeholder="Search..">
			<br>

			<!-- Table -->
			<div class="mt-4 table-responsive">
				<table class="table table-bordered">
					<thead style="background-color: #F95454 !important;">
						<tr>
							<th><i>ID</i></th>
							<th><i>Name</i></th>
							<th><i>Middle</i></th>
							<th>LastName</th>
							<th>UserName</th>
							<th>Date</th>
							<th>CreatedBy</th>
							<th colspan="2" class="text-center">Actions</th>
						</tr>
					</thead>
					<tbody>
						@if (AccObj == null || !AccObj.Any())
						{
							<tr>
								<td colspan="10" class="text-center">No records found.</td>
							</tr>
						}
						else
						{
							@foreach (var account in AccObj)
							{
								<tr>
									<td>@account.Id</td>
									<td>@account.Name</td>
									<td>@account.Middle</td>
									<td>@account.Lastname</td>
									<td>@account.userName</td>
									<td>@account.dateCreated</td>
									<td>@account.createdBy</td>
									<td>
										<button class="btn btn-primary btn-sm" href ="Cgl_EditAccount">Edit</button>

										<button class="btn btn-danger btn-sm">Delete</button>
									</td>
								</tr>
							}
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
</div>
<Pagination>
	<PaginationItem Disabled="@IsPageNavigationDisabled(PREVIOUS)" @onclick="Previous">
		<PaginationLink>
			<span aria-hidden="true">«</span>
		</PaginationLink>
	</PaginationItem>
	@{
		for (var i = 1; i <= pageItems; i++)
		{
			var pageNumberAsString = i.ToString();
			<PaginationItem @key="pageNumberAsString" Active="@IsActive(pageNumberAsString)">
				<PaginationLink Page="@pageNumberAsString" Clicked="SetActive">
					@pageNumberAsString
				</PaginationLink>
			</PaginationItem>
		}
	}
	<PaginationItem Disabled="@IsPageNavigationDisabled(NEXT)" @onclick="Next">
		<PaginationLink>
			<span aria-hidden="true">»</span>
		</PaginationLink>
	</PaginationItem>
</Pagination>

@code
{
	private const string PREVIOUS = "previous";
	private const string NEXT = "next";
	private string currentPage = "2";
	private int pageItems = 5;

	private bool IsActive(string page)
		=> currentPage == page;

	private bool IsPageNavigationDisabled(string navigation)
	{
		if (navigation.Equals(PREVIOUS))
		{
			return currentPage.Equals("1");
		}
		else if (navigation.Equals(NEXT))
		{
			return currentPage.Equals(pageItems.ToString());
		}
		return false;
	}

	private void Previous()
	{
		var currentPageAsInt = int.Parse(currentPage);
		if (currentPageAsInt > 1)
		{
			currentPage = (currentPageAsInt - 1).ToString();
		}
	}

	private void Next()
	{
		var currentPageAsInt = int.Parse(currentPage);
		if (currentPageAsInt < pageItems)
		{
			currentPage = (currentPageAsInt + 1).ToString();
		}
	}

	private void SetActive(string page)
		=> currentPage = page;
}
@code {
	private List<User> AccObj = new List<User>();

	protected override async Task OnInitializedAsync()
	{
		AccObj = await accountServices.GetAllAccountsAsync();
	}
}
